class Solution(object):
    def accountsMerge(self, accounts):
        """
        :type accounts: List[List[str]]
        :rtype: List[List[str]]
        """
        mails = {}
        for account in accounts:
            first_mail = account[1]
            if first_mail not in mails:
                mails[first_mail] = set()
            for mail in account[2:]:
                if mail not in mails:
                    mails[mail] = set()
                mails[mail].add(first_mail)
                mails[first_mail].add(mail)
                
        
        def dfs(mail,Set):
            if mail in Set:
                return 
            Set.add(mail)
            for m in mails[mail]:
                dfs(m,Set)
            return Set
            
        res = []
        visited = set()
        for account in accounts:
            if account[1] not in visited:                
                merged = dfs(account[1],set())
                res.append([account[0]] + sorted(list(merged)))
                visited.update(merged)
        return res 
