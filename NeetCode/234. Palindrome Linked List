# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def isPalindrome(self, head):
        """
        :type head: Optional[ListNode]
        :rtype: bool
        """
        if head == None or head.next == None:
            return True

        n = 0
        check = head
        while check:
            check = check.next
            n+=1

        prev = None
        i = 0 
        while i < n//2:
            temp = head.next
            head.next = prev
            prev = head
            head = temp
            i += 1
        
        if n % 2 == 1:
            head = head.next
        
        for i in range(n//2):
            if head.val != prev.val:
                return False
            head = head.next
            prev = prev.next 
        return True
